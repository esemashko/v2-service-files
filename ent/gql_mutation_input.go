// Code generated by ent, DO NOT EDIT.

package ent

// CreateFileInput represents a mutation input for creating files.
type CreateFileInput struct {
	OriginalName string
	StorageKey   string
	MimeType     string
	Size         int64
	Path         *string
	Description  *string
	Metadata     map[string]interface{}
}

// Mutate applies the CreateFileInput on the FileMutation builder.
func (i *CreateFileInput) Mutate(m *FileMutation) {
	m.SetOriginalName(i.OriginalName)
	m.SetStorageKey(i.StorageKey)
	m.SetMimeType(i.MimeType)
	m.SetSize(i.Size)
	if v := i.Path; v != nil {
		m.SetPath(*v)
	}
	if v := i.Description; v != nil {
		m.SetDescription(*v)
	}
	if v := i.Metadata; v != nil {
		m.SetMetadata(v)
	}
}

// SetInput applies the change-set in the CreateFileInput on the FileCreate builder.
func (c *FileCreate) SetInput(i CreateFileInput) *FileCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateFileInput represents a mutation input for updating files.
type UpdateFileInput struct {
	OriginalName     *string
	StorageKey       *string
	MimeType         *string
	Size             *int64
	ClearPath        bool
	Path             *string
	ClearDescription bool
	Description      *string
	ClearMetadata    bool
	Metadata         map[string]interface{}
}

// Mutate applies the UpdateFileInput on the FileMutation builder.
func (i *UpdateFileInput) Mutate(m *FileMutation) {
	if v := i.OriginalName; v != nil {
		m.SetOriginalName(*v)
	}
	if v := i.StorageKey; v != nil {
		m.SetStorageKey(*v)
	}
	if v := i.MimeType; v != nil {
		m.SetMimeType(*v)
	}
	if v := i.Size; v != nil {
		m.SetSize(*v)
	}
	if i.ClearPath {
		m.ClearPath()
	}
	if v := i.Path; v != nil {
		m.SetPath(*v)
	}
	if i.ClearDescription {
		m.ClearDescription()
	}
	if v := i.Description; v != nil {
		m.SetDescription(*v)
	}
	if i.ClearMetadata {
		m.ClearMetadata()
	}
	if v := i.Metadata; v != nil {
		m.SetMetadata(v)
	}
}

// SetInput applies the change-set in the UpdateFileInput on the FileUpdate builder.
func (c *FileUpdate) SetInput(i UpdateFileInput) *FileUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateFileInput on the FileUpdateOne builder.
func (c *FileUpdateOne) SetInput(i UpdateFileInput) *FileUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
