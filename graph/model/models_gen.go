// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"main/ent"
	"time"

	"github.com/99designs/gqlgen/graphql"
	"github.com/google/uuid"
)

// visibility removed; batch input no longer needed
type BatchDownloadInput struct {
	FileIds     []uuid.UUID `json:"fileIds"`
	ArchiveName *string     `json:"archiveName,omitempty"`
}

type BatchDownloadURLResponse struct {
	Success     bool       `json:"success"`
	Message     string     `json:"message"`
	URL         *string    `json:"url,omitempty"`
	ExpiresAt   *time.Time `json:"expiresAt,omitempty"`
	ArchiveName *string    `json:"archiveName,omitempty"`
	TotalFiles  int        `json:"totalFiles"`
}

type FileDeleteResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type FileDownloadURLResponse struct {
	Success   bool       `json:"success"`
	Message   string     `json:"message"`
	URL       *string    `json:"url,omitempty"`
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
}

type FileListResponse struct {
	Success    bool        `json:"success"`
	Message    string      `json:"message"`
	Files      []*ent.File `json:"files"`
	TotalCount int         `json:"totalCount"`
}

type FileResponse struct {
	Success bool      `json:"success"`
	Message string    `json:"message"`
	File    *ent.File `json:"file,omitempty"`
}

type FileUploadResponse struct {
	Success bool      `json:"success"`
	Message string    `json:"message"`
	File    *ent.File `json:"file,omitempty"`
}

type FilesBatchResponse struct {
	Success      bool        `json:"success"`
	Message      string      `json:"message"`
	Files        []*ent.File `json:"files"`
	TotalUpdated int         `json:"totalUpdated"`
}

type UpdateFileInfoInput struct {
	OriginalName *string `json:"originalName,omitempty"`
	Description  *string `json:"description,omitempty"`
}

type UploadFileInput struct {
	File        graphql.Upload `json:"file"`
	Description *string        `json:"description,omitempty"`
}
